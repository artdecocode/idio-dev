{"version":3,"sources":["../../src/watch-routes/index.js"],"names":["fsevents","require","e","log","console","findChildrenInCache","dir","file","path","item","cache","children","res","map","id","methods","router","defaultImports","aliases","Error","Object","keys","forEach","m","method","key","watcher","on","onChange","start","filter","c","test","w","p","rel","split","sep","route","name","layer","fn","stack","find","_route","i","indexOf","newFn","a","reloadedAliases","alias","aliasName","l","fun","j","join"],"mappings":"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","sourcesContent":["import { resolve, relative, sep } from 'path'\nimport { getName, removeExtension, importRoute } from 'idio/build/lib/routes'\n\nlet fsevents\ntry {\n  fsevents = require('fsevents')\n} catch (e) { /* ignore fsevents */ }\n\nconst log = console.log\n\nconst findChildrenInCache = (dir, file) => {\n  const path = resolve(dir, file)\n  const item = require.cache[path]\n  if (!item) return []\n  const { children } = item\n  const res = children.map(({ id }) => id)\n  return res\n}\n\n/**\n * Watch routes.\n */\nexport default ({ dir, methods, router, defaultImports, aliases }) => {\n  if (!fsevents) {\n    throw new Error('fsevetns is not installed')\n  }\n  Object.keys(methods).forEach((m) => {\n    const method = methods[m]\n    const keys = Object.keys(method)\n    keys.forEach(key => {\n      const { path } = method[key]\n      const watcher = fsevents(path)\n      log('watching %s', relative('', path))\n\n      watcher.on('modified', () => {\n        log('updated %s', relative('', path))\n        onChange(path, dir, router, defaultImports, aliases)\n      })\n      watcher.start()\n\n      const children = findChildrenInCache('', path)\n      children.filter((c) => {\n        return !/node_modules/.test(c)\n      }).forEach((c) => {\n        const w = fsevents(c)\n        log('watching dependency %s', relative('', c))\n        w.on('modified', (p) => {\n          log('updated dependency %s of %s', relative('', p), relative('', path))\n          onChange(path, dir, router, defaultImports, aliases)\n        })\n        w.start()\n      })\n    })\n  })\n}\n\nconst onChange = (path, dir, router, defaultImports, aliases) => {\n  const rel = relative(dir, path)\n  const [method, file] = rel.split(sep)\n  const route = `/${removeExtension(file)}`\n  const name = getName(method, route)\n  const layer = router.route(name)\n  const fn = layer.stack.find(({ _route }) => _route == true)\n  if (!fn) return\n  const i = layer.stack.indexOf(fn)\n  const children = findChildrenInCache('', path)\n  children.forEach((c) => {\n    delete require.cache[c]\n  })\n  delete require.cache[path]\n  const { fn: newFn } = importRoute(dir, rel, defaultImports)\n  layer.stack[i] = newFn\n\n  const a = aliases[method][route] || []\n  const reloadedAliases = a.map((alias) => {\n    const aliasName = getName(method, alias)\n    const l = router.route(aliasName)\n    const fun = l.stack.find(({ _route }) => _route == true)\n    if (!fun) return\n    const j = l.stack.indexOf(fun)\n    l.stack[j] = newFn\n    return aliasName\n  })\n\n  console.log('> hot reloaded %s (%s)', name, reloadedAliases.join(', '))\n}\n"],"file":"index.js"}